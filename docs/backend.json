{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the e-commerce platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "firstName": {
          "type": "string",
          "description": "First name of the user."
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the user."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        }
      },
      "required": [
        "id",
        "email"
      ]
    },
    "Product": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Product",
      "type": "object",
      "description": "Represents a product in the e-commerce catalog.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the product."
        },
        "name": {
          "type": "string",
          "description": "Name of the product."
        },
        "description": {
          "type": "string",
          "description": "Description of the product."
        },
        "price": {
          "type": "number",
          "description": "Price of the product."
        },
        "originalPrice": {
          "type": "number",
          "description": "The original price of the product, before any discount."
        },
        "imageUrls": {
          "type": "array",
          "description": "URLs of the product images.",
          "items": {
            "type": "string",
            "format": "uri"
          }
        },
        "imageHints": {
          "type": "array",
          "description": "AI hints for the product images.",
          "items": {
            "type": "string"
          }
        },
        "rating": {
            "type": "number",
            "description": "Product rating out of 5."
        },
        "category": {
            "type": "string",
            "description": "Product category."
        },
        "brand": {
            "type": "string",
            "description": "Product brand."
        },
        "sizes": {
            "type": "array",
            "description": "Available sizes for the product.",
            "items": {
                "type": "string"
            }
        },
        "isFeatured": {
            "type": "boolean",
            "description": "Whether the product is a featured product."
        },
        "isDeal": {
            "type": "boolean",
            "description": "Whether the product is part of a daily deal."
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "price",
        "imageUrls",
        "imageHints",
        "rating",
        "category",
        "brand"
      ]
    },
    "Category": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Category",
      "type": "object",
      "description": "Represents a product category, which can be a main category or a sub-category.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the category."
        },
        "name": {
          "type": "string",
          "description": "Name of the category."
        },
        "parentId": {
          "type": [ "string", "null" ],
          "description": "The ID of the parent category. If null, it's a main category."
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "Brand": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Brand",
      "type": "object",
      "description": "Represents a brand for products.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the brand."
        },
        "name": {
          "type": "string",
          "description": "Name of the brand."
        },
        "logoUrl": {
          "type": "string",
          "description": "URL of the brand logo.",
          "format": "uri"
        },
        "logoHint": {
          "type": "string",
          "description": "AI hint for the brand logo."
        }
      },
      "required": [
        "id",
        "name",
        "logoUrl",
        "logoHint"
      ]
    },
    "Order": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Order",
      "type": "object",
      "description": "Represents a customer order.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the order."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Order)"
        },
        "orderDate": {
          "type": "string",
          "description": "Date the order was placed.",
          "format": "date-time"
        },
        "totalAmount": {
          "type": "number",
          "description": "Total amount of the order."
        },
        "status": {
          "type": "string",
          "description": "Status of the order (e.g., pending, processing, shipped, delivered).",
          "enum": ["Processing", "Shipped", "Delivered", "Cancelled"]
        },
        "shippingAddress": {
            "$ref": "#/entities/ShippingAddress"
        }
      },
      "required": [
        "id",
        "userId",
        "orderDate",
        "totalAmount",
        "status",
        "shippingAddress"
      ]
    },
    "OrderItem": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "OrderItem",
      "type": "object",
      "description": "Represents an item within an order.",
      "properties": {
        "productId": {
          "type": "string",
          "description": "Reference to Product. (Relationship: Product 1:N OrderItem)"
        },
        "name": {
          "type": "string",
          "description": "Name of the product."
        },
        "imageUrl": {
            "type": "string",
            "description": "URL of the product image.",
            "format": "uri"
        },
        "quantity": {
          "type": "number",
          "description": "Quantity of the product in the order item."
        },
        "itemPrice": {
          "type": "number",
          "description": "Price of the item at the time of the order."
        },
        "selectedSize": {
            "type": "string",
            "description": "The size selected for the item, if applicable."
        }
      },
      "required": [
        "productId",
        "name",
        "imageUrl",
        "quantity",
        "itemPrice"
      ]
    },
    "ShippingAddress": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ShippingAddress",
      "type": "object",
      "description": "Represents a shipping address for a user.",
      "properties": {
        "fullName": {
            "type": "string",
            "description": "Full name of the recipient."
        },
        "address": {
          "type": "string",
          "description": "Address line."
        },
        "city": {
          "type": "string",
          "description": "City of the address."
        },
        "country": {
          "type": "string",
          "description": "Country of the address."
        },
        "postalCode": {
          "type": "string",
          "description": "Postal code of the address."
        }
      },
      "required": [
        "fullName",
        "address",
        "city",
        "country",
        "postalCode"
      ]
    }
  },
  "auth": {
    "providers": [
      "password"
    ]
  },
  "firestore": {
    "collections": {
      "/products": {
        "schema": {
          "$ref": "#/entities/Product"
        },
        "description": "Stores all products available in the e-commerce store."
      },
      "/categories": {
        "schema": {
            "$ref": "#/entities/Category"
        },
        "description": "Stores all product categories."
      },
      "/brands": {
        "schema": {
            "$ref": "#/entities/Brand"
        },
        "description": "Stores all product brands."
      },
      "/users/{userId}/orders": {
        "schema": {
          "$ref": "#/entities/Order"
        },
        "description": "Stores orders for each user."
      },
      "/users/{userId}/orders/{orderId}/items": {
        "schema": {
            "$ref": "#/entities/OrderItem"
        },
        "description": "Stores items for a specific order."
      }
    }
  }
}
